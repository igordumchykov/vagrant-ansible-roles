---
- name: Check Nexus Exists and Non-empty
  shell: if [ -d {{ nexus_home }} ]; then ls {{ nexus_home }}; fi;
  register: nexus_home_dir

- name: Create Nexus home
  file:
    path: "{{ nexus_home }}"
    state: directory
    owner: "{{ nexus_user }}"
    group: "{{ nexus_group }}"
  when: nexus_home_dir.stdout == ""

- name: Install Nexus
  unarchive:
    src: https://download.sonatype.com/nexus/{{ nexus_version }}/latest-unix.tar.gz
    dest: "{{ nexus_home }}"
    remote_src: yes
  when: nexus_home_dir.stdout == ""
  register: nexus_installed

- name: Set Nexus Folder Ownership
  shell: chown {{ nexus_user }}:{{ nexus_group }} {{ nexus_home }} -R
  when: nexus_installed.changed == true

- name: Get Nexus Full Version
  shell: cd {{ nexus_home }} && ls -d */ | grep 'nexus*' | sed 's#/##'
  when: nexus_installed.changed == true
  register: nexus_version_full

- set_fact:
    nexus_version_full: "{{ nexus_version_full.stdout }}"
  when: nexus_installed.changed == true

- name: Create Nexus Script
  template:
    src: "{{ nexus_template }}"
    dest: "{{ nexus_script }}"
  when: nexus_installed.changed == true

- name: Edit Nexusrc Configuration
  lineinfile:
    path: "{{ nexus_home }}/{{ nexus_version_full }}/bin/nexus.rc"
    state: present
    line: 'run_as_user="{{ nexus_user }}"'
  when: nexus_installed.changed == true
  notify:
    - Start Nexus
